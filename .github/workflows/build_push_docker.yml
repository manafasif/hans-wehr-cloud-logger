name: Build and push Docker image upon release
on:
  push:
    branches:
      - main

# types: [published] # , created, edited

jobs:
  # push_to_registry:
  #   name: Build and push Docker image to Docker Hub
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v2

  #     - name: Push to Docker Hub
  #       uses: docker/build-push-action@v1 # Info: https://github.com/docker/build-push-action/tree/releases/v1#tags
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_PASSWORD }}
  #         repository: ${{ secrets.DOCKERHUB_REPOSITORY }}
  #         tag_with_ref: true # Info: https://github.com/docker/build-push-action/tree/releases/v1#tag_with_ref
  #         tag_with_sha: true # Info: https://github.com/docker/build-push-action/tree/releases/v1#tag_with_sha
  #         tags: latest
  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Build the docker_compose
  #       run: docker-compose build

  # - name: Build the application
  #   run: docker-compose exec -T counter_app npm run build

  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Deploy in EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY  }}
          HOSTNAME: ec2-44-202-107-5.compute-1.amazonaws.com
          USER_NAME: ubuntu

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            # comment
            # Now we have got the access of EC2 and we will start the deploy
            if [ -d "~/hans-wehr-cloud-logger" ]; then
                cd ~/hans-wehr-cloud-logger &&
                git checkout master &&
                git fetch --all &&
                git reset --hard origin/master &&
                git pull origin master
            else
                cd ~ &&
                git clone https://github.com/manafasif/hans-wehr-cloud-logger.git &&
                cd ~/hans-wehr-cloud-logger
            fi &&
            echo "DB_USERNAME=${{ secrets.API_DB_USERNAME  }}" > .env && 
            echo "DB_PASSWORD=${{ secrets.API_DB_PASSWORD  }}" >> .env &&
            docker-compose build && docker-compose up -d
            '
  # deploy:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: alex-ac/github-action-ssh-docker-compose@master
  #       name: Docker-Stack Remote Deployment
  #       with:
  #         ssh_host: ec2-54-226-180-50.compute-1.amazonaws.com
  #         ssh_private_key: ${{ secrets.API_SSH_PRIVATE_KEY }}
  #         ssh_user: ubuntu
  #         docker_compose_prefix: hans-wehr
  #         use_stack: "true"
